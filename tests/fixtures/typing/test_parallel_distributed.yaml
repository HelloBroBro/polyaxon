
---
version: 1

kind: group
framework: horovod

inputs:
  - {name: batch_size, type: int, is_optional: true, default: 8}
  - {name: max_epochs, type: int, is_optional: true, default: 100}
  - {name: learning_policy, type: str, is_optional: true, default: reduce}
  - {name: min_learning_rate, type: float, is_optional: true, default: 0.00001}


environment:
  resources:
    gpu:
      requests: 1
      limits: 1
  replicas:
    n_workers: 1
    default_worker:
      resources:
        gpu:
          requests: 1
          limits: 1

hptuning:
  concurrency: 1
  bo:
    n_iterations: 15
    n_initial_trials: 2
    metric:
      name: loss
      optimization: minimize
    utility_function:
      n_warmup: 1
      n_iter: 2
      acquisition_function: ucb
      kappa: 2.576
      gaussian_process:
        kernel: matern
        length_scale: 1.0
        nu: 1.9
        n_restarts_optimizer: 0

  matrix:
    max_learning_rate:
      uniform: [0.001, 0.01]
    momentum:
      values: [0.85, 0.9, 0.95]
    weight_decay:
      uniform: [0.00001, 0.01]


build:
  dockerfile: polyaxon/Dockerfile

run:
  cmd: python polyaxon/train.py \
    --batch_size={{ batch_size }} \
    --max_epochs={{ max_epochs }} \
    --learning_policy={{ learning_policy }} \
    --max_learning_rate={{ max_learning_rate }} \
    --min_learning_rate={{ min_learning_rate }} \
    --momentum={{ momentum }} \
    --weight_decay={{ weight_decay }}
